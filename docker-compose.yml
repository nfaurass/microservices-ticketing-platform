networks:
  event-network:
    driver: bridge

volumes:
  mongo-data:
  rabbitmq-data:

services:
  mongo:
    image: mongo:5.0
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - event-network
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - event-network
    restart: unless-stopped

  auth-service:
    build: ./services/auth-service
    container_name: auth-service
    ports:
      - "3000:3000"
    depends_on:
      mongo:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      MONGO_URI: mongodb://mongo:27017/main
      JWT_SECRET: 92ba9a0bf82dea8c483e70485719f7147cb321d893d6a10a9b7bda7235fef7d9
      PORT: 3000
    networks:
      - event-network
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:3000/ || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  event-service:
    build: ./services/event-service
    container_name: event-service
    ports:
      - "3002:3002"
    depends_on:
      mongo:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      MONGO_URI: mongodb://mongo:27017/main
      RABBITMQ_HOST: rabbitmq
      PORT: 3002
    networks:
      - event-network
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:3002/ || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  ticket-service:
    build: ./services/ticket-service
    container_name: ticket-service
    ports:
      - "3001:3001"
    depends_on:
      mongo:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      MONGO_URI: mongodb://mongo:27017/ticketdb
      RABBITMQ_HOST: rabbitmq
      PORT: 3001
    networks:
      - event-network
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:3001/ || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "4200:80"
    depends_on:
      auth-service:
        condition: service_healthy
      event-service:
        condition: service_healthy
      ticket-service:
        condition: service_healthy
    networks:
      - event-network
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3